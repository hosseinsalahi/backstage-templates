apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Create a PostgreSQL isntance in Kubernetes
  name: create-psql
  title: Create a PostgreSQL
spec:
  lifecycle: experimental
  owner: guests
  type: service
  parameters:
    - properties:
        name:
          description: The PSQL instnace name
          title: Name
          type: string
          ui:autofocus: true
      required:
        - name
      title: Instnace Name
    - title: Cluster Name
      properties:
        cluster:
          type: string
          enum:
            - demo
          ui:autocomplete:
            options:
              - demo
    - title: Repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
    - action: kube:apply
      id: k-apply
      name: Create a Resouce
      input:
        namespaced: false
        clusterName: ${{ parameters.cluster }}
        manifest: | 
          apiVersion: marketplace.kratix.io/v1alpha2
          kind: postgresql
          metadata:
            name: ${{ parameters.name }}
            namespace: default
          spec:
           teamId: "demo"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }} 
        catalogInfoPath: '/catalog-info.yaml'
  output:
    entityRef: ${{ steps.register.output.entityRef }}
